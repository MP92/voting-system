<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <tx:annotation-driven/>

    <jdbc:initialize-database data-source="dataSource" enabled="${database.init}">
        <jdbc:script location="classpath:db/${jdbc.initLocation}"/>
        <jdbc:script location="classpath:db/populateDB.sql" encoding="utf-8"/>
    </jdbc:initialize-database>

    <beans profile="postgresql">
        <context:property-placeholder location="classpath:db/postgresql/postgresql.properties" system-properties-mode="OVERRIDE"/>

        <bean id="dataSource"
              class="org.apache.commons.dbcp2.BasicDataSource"
              p:driverClassName="org.postgresql.Driver"
              p:url="${jdbc.url}"
              p:username="${jdbc.username}"
              p:password="${jdbc.password}"
              p:initialSize="2"
              p:maxTotal="5" />
    </beans>

    <beans profile="h2">
        <context:property-placeholder location="classpath:db/h2/h2.properties" system-properties-mode="OVERRIDE"/>

        <!--no pooling-->
        <bean id="dataSource"
              class="org.springframework.jdbc.datasource.DriverManagerDataSource"
              p:driverClassName="org.h2.Driver"
              p:url="${database.url}"
              p:username="${database.username}"
              p:password="${database.password}"/>
    </beans>

    <beans profile="jdbc">
        <context:component-scan base-package="ru.pkg.**.repository.jdbc"/>

        <bean id="transactionManager"
              class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
              p:dataSource-ref="dataSource" />
    </beans>

    <beans profile="jpa">
        <context:component-scan base-package="ru.pkg.**.repository.jpa"/>

        <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
              p:dataSource-ref="dataSource"
              p:packagesToScan="ru.pkg.model">

            <property name="jpaPropertyMap">
                <map>
                    <entry key="hibernate.format_sql" value="false"/>
                    <entry key="hibernate.use_sql_comments" value="true"/>

                    <!--<entry key="javax.persistence.schema-generation.scripts.action" value="drop-and-create"/>
                    <entry key="javax.persistence.schema-generation.scripts.create-target" value="${VOTING_SYSTEM_ROOT}/config/ddl/create.ddl"/>
                    <entry key="javax.persistence.schema-generation.scripts.drop-target" value="${VOTING_SYSTEM_ROOT}/config/ddl/drop.ddl"/>-->
                </map>
            </property>

            <property name="jpaVendorAdapter">
                <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
                    p:showSql="true"/>
            </property>
        </bean>

        <bean id="transactionManager"
              class="org.springframework.orm.jpa.JpaTransactionManager"
              p:entityManagerFactory-ref="entityManagerFactory" />

        <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
    </beans>

</beans>